{"ast":null,"code":"var _jsxFileName = \"/Users/quincyhicks/Desktop/plant-app/plant-app/plant-app-client/src/components/MainContainer.jsx\";\nimport React, { Component } from 'react';\nimport PlantList from \"./components/PlantList\";\n\nclass MainContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: []\n    };\n  } // componentDidMount() {\n  //     console.log(\"component is mounting\")\n  //     this.getMovies();\n  // }\n  // deleteMovie = async (id) => {\n  //     console.log(id)\n  //     try{\n  //         const deleteMovie = await fetch(`http://localhost:9000/api/v1/movies/${id}`, {\n  //             method: \"DELETE\",\n  //             credentials: \"include\",\n  //         })\n  //         const parsedResponse = await deleteMovie.json();\n  //         if(parsedResponse.status.code === 200) {\n  //             this.setState({\n  //                 movies: this.state.movies.filter(movie => movie._id !== id)\n  //             })\n  //         }\n  //     }catch(err){\n  //         console.log(err)\n  //     }\n  // }\n  // updateMovie = async (id, formData) => {\n  //     const updatedMovie = await fetch(`http://localhost:9000/api/v1/movies/${id}`, {\n  //         method: \"PUT\",\n  //         body: JSON.stringify(formData),\n  //         credentials: \"include\",\n  //         headers: {\n  //             \"Content-Type\": \"application/json\"\n  //         }\n  //     })\n  //     const parsedResponse = await updatedMovie.json();\n  //     if(parsedResponse.status.code === 201){\n  //         this.setState({\n  //             movies: this.state.movies.map(function(movie){\n  //                 if(movie._id === id){\n  //                     return parsedResponse.data\n  //                 }else{\n  //                     return movie\n  //                 }\n  //             })\n  //         })\n  //     }\n  //     console.log(parsedResponse)\n  // }\n  // createMovie = async (formData) => {\n  //     console.log(formData)\n  //     try{\n  //         const newMovie = await fetch(\"http://localhost:9000/api/v1/movies\", {\n  //             method: \"POST\",\n  //             body: JSON.stringify(formData),\n  //             credentials: \"include\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\",\n  //             }\n  //         })\n  //         const parsedResponse = await newMovie.json();\n  //         if(parsedResponse.status.code === 201){\n  //             this.setState({\n  //                 movies: [...this.state.movies, parsedResponse.data]\n  //             })\n  //         }\n  //     }catch(err) {\n  //     }\n  // }\n  // getMovies = async () => {\n  //     try{\n  //     const movies = await fetch(\"http://localhost:9000/api/v1/movies\")\n  //     const parsedResponse = await movies.json();\n  //     if(parsedResponse.status.code === 200){\n  //         this.setState({\n  //             movies: parsedResponse.data})\n  //             console.log(parsedResponse.data)\n  //         }\n  //     }catch(err){\n  //         console.log(err)\n  //     }\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Here is the Movie Container\"), React.createElement(PlantList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/quincyhicks/Desktop/plant-app/plant-app/plant-app-client/src/components/MainContainer.jsx"],"names":["React","Component","PlantList","MainContainer","constructor","state","movies","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAIA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAClCG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH,GANiC,CAQlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhGiC;;AAmGtC,eAAeJ,aAAf","sourcesContent":["import React, { Component} from 'react'\nimport PlantList from \"./components/PlantList\"\n\n\n\nclass MainContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            movies: []\n        }\n    }\n\n    // componentDidMount() {\n    //     console.log(\"component is mounting\")\n    //     this.getMovies();\n    // }\n    // deleteMovie = async (id) => {\n    //     console.log(id)\n    //     try{\n    //         const deleteMovie = await fetch(`http://localhost:9000/api/v1/movies/${id}`, {\n    //             method: \"DELETE\",\n    //             credentials: \"include\",\n    //         })\n    //         const parsedResponse = await deleteMovie.json();\n    //         if(parsedResponse.status.code === 200) {\n    //             this.setState({\n    //                 movies: this.state.movies.filter(movie => movie._id !== id)\n                    \n    //             })\n    //         }\n    //     }catch(err){\n    //         console.log(err)\n    //     }\n    // }\n    // updateMovie = async (id, formData) => {\n    //     const updatedMovie = await fetch(`http://localhost:9000/api/v1/movies/${id}`, {\n    //         method: \"PUT\",\n    //         body: JSON.stringify(formData),\n    //         credentials: \"include\",\n    //         headers: {\n    //             \"Content-Type\": \"application/json\"\n    //         }\n    //     })\n    //     const parsedResponse = await updatedMovie.json();\n    //     if(parsedResponse.status.code === 201){\n    //         this.setState({\n    //             movies: this.state.movies.map(function(movie){\n    //                 if(movie._id === id){\n    //                     return parsedResponse.data\n    //                 }else{\n    //                     return movie\n    //                 }\n    //             })\n    //         })\n    //     }\n    //     console.log(parsedResponse)\n    // }\n    // createMovie = async (formData) => {\n    //     console.log(formData)\n    //     try{\n    //         const newMovie = await fetch(\"http://localhost:9000/api/v1/movies\", {\n    //             method: \"POST\",\n    //             body: JSON.stringify(formData),\n    //             credentials: \"include\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n                    \n    //             }\n    //         })\n    //         const parsedResponse = await newMovie.json();\n    //         if(parsedResponse.status.code === 201){\n    //             this.setState({\n    //                 movies: [...this.state.movies, parsedResponse.data]\n    //             })\n    //         }\n    //     }catch(err) {\n\n    //     }\n    // }\n\n    // getMovies = async () => {\n    //     try{\n    //     const movies = await fetch(\"http://localhost:9000/api/v1/movies\")\n    //     const parsedResponse = await movies.json();\n    //     if(parsedResponse.status.code === 200){\n    //         this.setState({\n    //             movies: parsedResponse.data})\n    //             console.log(parsedResponse.data)\n    //         }\n    //     }catch(err){\n    //         console.log(err)\n    //     }\n    // }\n    render() {\n        return(\n            <div>\n                <h3>Here is the Movie Container</h3>\n                <PlantList />\n            </div>\n        )\n    }\n}\n\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}