{"ast":null,"code":"var _jsxFileName = \"/Users/quincyhicks/Documents/ClientKeeper-master/ClientKeeper/plant-app-client/src/components/MainContainer.jsx\";\nimport React, { Component } from 'react';\nimport PlantList from \"./PlantList/PlantList\";\nimport PlantNav from \"./nav\";\nimport { Card, CardHeader, CardTitle, CardImg, CardBody, CardFooter, Button, ButtonGroup } from \"shards-react\";\n\nclass MainContainer extends Component {\n  constructor() {\n    super();\n\n    this.getClients = async () => {\n      const clients = await fetch(\"http://localhost:3001/clients\");\n      const parsedResponse = await clients.json();\n      console.log(parsedResponse);\n      this.setState({\n        clients: parsedResponse\n      });\n    };\n\n    this.state = {\n      clients: []\n    };\n  }\n\n  componentDidMount() {\n    this.getClients();\n  }\n\n  // createPlant = async (formData) => {\n  //     console.log(formData)\n  //     try{\n  //         const newPlant = await fetch(\"http://localhost:9000/plants\", {\n  //             method: \"POST\",\n  //             body: JSON.stringify(formData),\n  //             credentials: \"include\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\",\n  //             }\n  //         })\n  //         const parsedResponse = await newPlant.json();\n  //         if(parsedResponse.status.code === 201){\n  //             this.setState({\n  //                 plants: [...this.state.plants, parsedResponse.data]\n  //             })\n  //         }\n  //         console.log(\"********************\")\n  //         console.log(this.state)\n  //     }catch(err) {\n  //     }\n  // }\n  render() {\n    const clients = this.state.clients.map(clients => {\n      return React.createElement(\"div\", {\n        key: clients.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: ({\n          maxWidth: \"300px\"\n        }, {\n          small: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, clients.first_name, \" \", clients.last_name), React.createElement(CardImg, {\n        src: \"https://149351035.v2.pressablecdn.com/wp-content/uploads/2014/08/RVSB_Chart.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" Portfolio Value: $100,000.24  :)\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Last contact: \", clients.last_contact), React.createElement(ButtonGroup, {\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Portfolio\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Delete\"))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Call\")));\n    });\n    return React.createElement(\"div\", {\n      class: \"clientList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(PlantNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      class: \"dash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"*ClientKeeper Dashboard* :)\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), clients);\n  }\n\n} //     componentDidMount() {\n//         console.log(\"component is mounting\")\n//         this.getMovies();\n//     }\n//     // deletePlant = async (id) => {\n//     //     console.log(id)\n//     //     try{\n//     //         const deletePlant = await fetch(`http://localhost:9000/plants/${id}`, {\n//     //             method: \"DELETE\",\n//     //             credentials: \"include\",\n//     //         })\n//     //         const parsedResponse = await deletePlant.json();\n//     //         if(parsedResponse.status.code === 200) {\n//     //             this.setState({\n//     //                 plants: this.state.plants.filter(plant => plant._id !== id)\n//     //             })\n//     //         }\n//     //     }catch(err){\n//     //         console.log(err)\n//     //     }\n//     // }\n//     // updatePlant = async (id, formData) => {\n//     //     const updatePlant = await fetch(`http://localhost:9000/plants/${id}`, {\n//     //         method: \"PUT\",\n//     //         body: JSON.stringify(formData),\n//     //         credentials: \"include\",\n//     //         headers: {\n//     //             \"Content-Type\": \"application/json\"\n//     //         }\n//     //     })\n//     //     const parsedResponse = await updatePlant.json();\n//     //     if(parsedResponse.status.code === 201){\n//     //         this.setState({\n//     //             plants: this.state.plants.map(function(plant){\n//     //                 if(plant._id === id){\n//     //                     return parsedResponse.data\n//     //                 }else{\n//     //                     return plant\n//     //                 }\n//     //             })\n//     //         })\n//     //     }\n//     //     console.log(parsedResponse)\n//     // }\n// createPlant = async (formData) => {\n//     console.log(formData)\n//     try{\n//         const newPlant = await fetch(\"http://localhost:9000/plants\", {\n//             method: \"POST\",\n//             body: JSON.stringify(formData),\n//             credentials: \"include\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             }\n//         })\n//         const parsedResponse = await newPlant.json();\n//         if(parsedResponse.status.code === 201){\n//             this.setState({\n//                 plants: [...this.state.plants, parsedResponse.data]\n//             })\n//         }\n//         console.log(\"********************\")\n//         console.log(this.state)\n//     }catch(err) {\n//     }\n// }\n//     getMovies = async () => {\n//         console.log(\"Getting the movies*****************\")\n//         const plants = await fetch(\"http://localhost:3001/clients\")\n//         const parsedResponse = await plants.json();\n//         this.setState({\n//             plants: parsedResponse.data})\n//             console.log(parsedResponse.data)\n//             console.log(\"We got the movies\")\n//             console.log(this.state)\n//     }\n//     render() {\n//         return(\n//             <div>\n//                 <PlantNav createPlant= {this.createPlant} />\n//                 <h3>Dashboard</h3>\n//                 <h4>{this.state.plants}</h4>\n//                 <PlantList updatePlant={this.updatePlant} deletePlant={this.deletePlant} plants={this.state.plants} />\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default MainContainer;","map":{"version":3,"sources":["/Users/quincyhicks/Documents/ClientKeeper-master/ClientKeeper/plant-app-client/src/components/MainContainer.jsx"],"names":["React","Component","PlantList","PlantNav","Card","CardHeader","CardTitle","CardImg","CardBody","CardFooter","Button","ButtonGroup","MainContainer","constructor","getClients","clients","fetch","parsedResponse","json","console","log","setState","state","componentDidMount","render","map","id","maxWidth","small","first_name","last_name","last_contact"],"mappings":"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","sourcesContent":["import React, { Component} from 'react'\nimport PlantList from \"./PlantList/PlantList\"\nimport PlantNav from \"./nav\"\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardImg,\n    CardBody,\n    CardFooter,\n    Button,\n    ButtonGroup\n  } from \"shards-react\";\n  \n\nclass MainContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clients: []\n        }\n    }\n    componentDidMount(){\n        this.getClients();\n    }\n    getClients = async () => {\n        const clients = await fetch(\"http://localhost:3001/clients\");\n        const parsedResponse = await clients.json()\n        console.log(parsedResponse);\n        this.setState({\n            clients: parsedResponse\n        })\n    }\n    // createPlant = async (formData) => {\n    //     console.log(formData)\n    //     try{\n    //         const newPlant = await fetch(\"http://localhost:9000/plants\", {\n    //             method: \"POST\",\n    //             body: JSON.stringify(formData),\n    //             credentials: \"include\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n                    \n    //             }\n    //         })\n    //         const parsedResponse = await newPlant.json();\n    //         if(parsedResponse.status.code === 201){\n    //             this.setState({\n    //                 plants: [...this.state.plants, parsedResponse.data]\n    //             })\n    //         }\n    //         console.log(\"********************\")\n    //         console.log(this.state)\n    //     }catch(err) {\n\n    //     }\n    // }\n    render(){\n        const clients = this.state.clients.map((clients)=>{\n            return <div key={clients.id}> \n                {/* <h3>{clients.first_name} {clients.last_name}</h3> */}\n                <Card style={{ maxWidth: \"300px\" }, {small: true}}>\n                <CardHeader>{clients.first_name} {clients.last_name}</CardHeader>\n                <CardImg src=\"https://149351035.v2.pressablecdn.com/wp-content/uploads/2014/08/RVSB_Chart.png\" />\n                <CardBody>\n                    <CardTitle> Portfolio Value: $100,000.24  :)</CardTitle>\n                    <p>Last contact: {clients.last_contact}</p>\n                    <ButtonGroup size=\"sm\">\n                    <Button>Portfolio</Button>\n                    <Button>Update</Button>\n                    <Button>Delete</Button>\n                    </ButtonGroup>\n                </CardBody>\n                <CardFooter>Call</CardFooter>\n                </Card>\n            </div>\n        })\n        return(\n            <div class=\"clientList\">\n                <PlantNav />\n                <p class=\"dash\">*ClientKeeper Dashboard* :)</p>\n                <br></br>\n                {clients}\n            </div>\n        )\n    }\n}\n//     componentDidMount() {\n//         console.log(\"component is mounting\")\n//         this.getMovies();\n//     }\n//     // deletePlant = async (id) => {\n//     //     console.log(id)\n//     //     try{\n//     //         const deletePlant = await fetch(`http://localhost:9000/plants/${id}`, {\n//     //             method: \"DELETE\",\n//     //             credentials: \"include\",\n//     //         })\n//     //         const parsedResponse = await deletePlant.json();\n//     //         if(parsedResponse.status.code === 200) {\n//     //             this.setState({\n//     //                 plants: this.state.plants.filter(plant => plant._id !== id)\n                    \n//     //             })\n//     //         }\n//     //     }catch(err){\n//     //         console.log(err)\n//     //     }\n//     // }\n//     // updatePlant = async (id, formData) => {\n//     //     const updatePlant = await fetch(`http://localhost:9000/plants/${id}`, {\n//     //         method: \"PUT\",\n//     //         body: JSON.stringify(formData),\n//     //         credentials: \"include\",\n//     //         headers: {\n//     //             \"Content-Type\": \"application/json\"\n//     //         }\n//     //     })\n//     //     const parsedResponse = await updatePlant.json();\n//     //     if(parsedResponse.status.code === 201){\n//     //         this.setState({\n//     //             plants: this.state.plants.map(function(plant){\n//     //                 if(plant._id === id){\n//     //                     return parsedResponse.data\n//     //                 }else{\n//     //                     return plant\n//     //                 }\n//     //             })\n//     //         })\n//     //     }\n//     //     console.log(parsedResponse)\n//     // }\n    // createPlant = async (formData) => {\n    //     console.log(formData)\n    //     try{\n    //         const newPlant = await fetch(\"http://localhost:9000/plants\", {\n    //             method: \"POST\",\n    //             body: JSON.stringify(formData),\n    //             credentials: \"include\",\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n                    \n    //             }\n    //         })\n    //         const parsedResponse = await newPlant.json();\n    //         if(parsedResponse.status.code === 201){\n    //             this.setState({\n    //                 plants: [...this.state.plants, parsedResponse.data]\n    //             })\n    //         }\n    //         console.log(\"********************\")\n    //         console.log(this.state)\n    //     }catch(err) {\n\n    //     }\n    // }\n\n//     getMovies = async () => {\n        \n//         console.log(\"Getting the movies*****************\")\n//         const plants = await fetch(\"http://localhost:3001/clients\")\n//         const parsedResponse = await plants.json();\n//         this.setState({\n//             plants: parsedResponse.data})\n//             console.log(parsedResponse.data)\n//             console.log(\"We got the movies\")\n//             console.log(this.state)\n    \n//     }\n//     render() {\n//         return(\n//             <div>\n//                 <PlantNav createPlant= {this.createPlant} />\n//                 <h3>Dashboard</h3>\n//                 <h4>{this.state.plants}</h4>\n//                 <PlantList updatePlant={this.updatePlant} deletePlant={this.deletePlant} plants={this.state.plants} />\n//             </div>\n//         )\n//     }\n// }\n\nexport default MainContainer;"]},"metadata":{},"sourceType":"module"}